version: '3.8'

services:
  epsilon-consul-server:
    image: hashicorp/consul:1.9.3
    container_name: epsilon-consul-server
    restart: always
    volumes:
     - ./consul/server.json:/consul/config/server.json:ro
    networks:
      - consul
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    command: "agent"

  epsilon-consul-client:
    image: hashicorp/consul:1.9.3
    container_name: epsilon-consul-client
    restart: always
    volumes:
     - ./consul/client.json:/consul/config/client.json:ro
    networks:
      - consul
    command: "agent"

  epsilon-zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    container_name: epsilon-zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  epsilon-broker:
    image: confluentinc/cp-server:6.0.0
    container_name: epsilon-broker
    depends_on:
      - epsilon-zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'epsilon-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://epsilon-broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: epsilon-broker:9092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  epsilon-schema-registry:
    image: confluentinc/cp-schema-registry:6.0.0
    container_name: epsilon-schema-registry
    ports:
      - 8081:8081
    depends_on:
      - epsilon-broker
    environment:
      SCHEMA_REGISTRY_HOST_NAME: epsilon-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://epsilon-broker:9092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  epsilon-control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.0
    hostname: epsilon-control-center
    container_name: epsilon-control-center
    depends_on:
      - epsilon-broker
      - epsilon-schema-registry
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "epsilon-broker:9092"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://epsilon-schema-registry:8081"
      CONTROL_CENTER_CONNECT_CLUSTER: "http://connect:8083"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  epsilon-kafka-setup:
    image: confluentinc/cp-kafka:6.0.0
    container_name: epsilon-kafka-setup
    depends_on:
      - epsilon-broker
      - epsilon-schema-registry
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
      SCHEMA_REGISTRY_URL: http://epsilon-schema-registry:8081
    command:
      - bash
      - -c
      - |
        echo "Waiting for Kafka to be ready..."
        cub kafka-ready -b epsilon-broker:9092 1 40
        echo "Kafka ready"
        echo "Creating topics"
        kafka-topics --create --bootstrap-server epsilon-broker:9092 --partitions 1 --replication-factor 1 --topic accounts

networks:
  consul:
    driver: bridge
